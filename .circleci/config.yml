version: 2.1

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: cimg/ruby:2.7.1-node
    environment:
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
  postgres: &postgres
    image: circleci/postgres:9.5-alpine
    environment:
      POSTGRES_USER: circleci-demo-ruby
      POSTGRES_DB: rails_blog_test
      POSTGRES_PASSWORD: ""

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v
      - run: bundle install
      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
  test:
    parallelism: 3
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - run: bundle install
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace

workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
